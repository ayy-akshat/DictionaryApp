{"version":3,"sources":["App.js"],"names":["App","getDefinition","word","a","async","setState","loadState","w","toLowerCase","i","length","indexOf","replace","fetch","request","json","jsonContent","title","type","meanings","partOfSpeech","definition","definitions","pronunciation","phonetics","text","soundUrl","audio","wordInfo","state","wordInput","style","styles","container","header","headerTxt","inputAndBtnContainer","placeholder","onChangeText","defineBtn","onPress","r","wordDefinitionContainer","wordDefTxtTitle","wordDefSection","wordDefTxtContent","pronounceBtn","Audio","Sound","createAsync","uri","shouldPlay","pronounceBtnTxt","Component","StyleSheet","create","backgroundColor","alignItems","width","height","alignContent","justifyContent","marginBottom","textAlign","fontSize","color","maxWidth","borderWidth","borderColor","borderRadius","padding","marginVertical","fontWeight","marginTop"],"mappings":"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","file":"static/js/app.38bbe550.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { StyleSheet, Text, View, TextInput, TouchableOpacity } from 'react-native';\nimport { Audio } from 'expo-av';\n\nconst\nIDLE = 0,\nLOADING = 1,\nFOUND = 2,\nNOTFOUND = 3;\n\n\nexport default class App extends Component\n{\n  constructor()\n  {\n    super();\n    this.state = {wordInfo: {}, loadState: 0, wordInput: \"\"};\n  }\n\n  render()\n  {\n    return (\n      <View style={styles.container}>\n        <View style={styles.header}>\n          <Text style={styles.headerTxt}>\n            Dictionary App\n          </Text>\n        </View>\n  \n        <View style={styles.inputAndBtnContainer}>\n          <TextInput\n          placeholder=\"Enter a word\"\n          style={styles.wordInput}\n          onChangeText={(text)=>{this.setState({wordInput: text})}}\n          />\n          <TouchableOpacity style={styles.defineBtn} onPress={() => {this.getDefinition(this.state.wordInput)}}>\n            <Text>\n              Define\n            </Text>\n          </TouchableOpacity>\n        </View>\n\n        {\n          (() =>\n          {\n            var r;\n            switch (this.state.loadState) {\n              case IDLE:\n                r = (() => (\n                  <View style={styles.wordDefinitionContainer}>\n                    <Text style={styles.wordDefTxtTitle}>\n                      Enter a word and its definition will show up here.\n                    </Text>\n                  </View>\n                ))()\n                break;\n              \n              case LOADING:\n                r = (() => (\n                  <View style={styles.wordDefinitionContainer}>\n                    <Text style={styles.wordDefTxtTitle}>\n                      Loading...\n                    </Text>\n                  </View>\n                ))()\n                break;\n              \n              case FOUND:\n                r = (() => (\n                  <View style={styles.wordDefinitionContainer}>\n\n                    <View style={styles.wordDefSection}>\n                      <Text style={styles.wordDefTxtTitle}>\n                        Word\n                      </Text>\n                      <Text style={styles.wordDefTxtContent}>\n                        {this.state.wordInfo.word}\n                      </Text>\n                    </View>\n\n                    <View style={styles.wordDefSection}>\n                      <Text style={styles.wordDefTxtTitle}>\n                        Type\n                      </Text>\n                      <Text style={styles.wordDefTxtContent}>\n                      {this.state.wordInfo.type}\n                      </Text>\n                    </View>\n\n                    <View style={styles.wordDefSection}>\n                      <Text style={styles.wordDefTxtTitle}>\n                        Definition\n                      </Text>\n                      <Text style={styles.wordDefTxtContent}>\n                      {this.state.wordInfo.definition}\n                      </Text>\n                    </View>\n\n                    <View style={styles.wordDefSection}>\n                      <Text style={styles.wordDefTxtTitle}>\n                        Pronunciation\n                      </Text>\n                      <Text style={styles.wordDefTxtContent}>\n                      {this.state.wordInfo.pronunciation}\n                      </Text>\n                      <TouchableOpacity style={styles.pronounceBtn} onPress={async ()=>{\n                        await Audio.Sound.createAsync({\n                          uri: this.state.wordInfo.soundUrl\n                        }, { shouldPlay: true });\n                      }}>\n                        <Text style={styles.pronounceBtnTxt}>\n                          Play Sound\n                        </Text>\n                      </TouchableOpacity>\n                    </View>\n                    \n                  </View>\n                ))()\n                break;\n              \n              case NOTFOUND:\n                r = (() => (\n                  <View style={styles.wordDefinitionContainer}>\n                    <Text style={styles.wordDefTxtTitle}>\n                      Word not found\n                    </Text>\n                  </View>\n                ))()\n                break;\n\n              default:\n                r = (() => (\n                  <View style={styles.wordDefinitionContainer}>\n                    <Text style={styles.wordDefTxtTitle}>\n                      Enter a word and its definition will show up here.\n                    </Text>\n                  </View>\n                ))()\n                break;\n            }\n            return r;\n          })()\n        }\n      </View>\n    );\n  }\n  \n  getDefinition = async (word) =>\n  {\n    this.setState({loadState: LOADING});\n    \n    var w = word;\n    w = w.toLowerCase();\n    for (var i = 0; i < w.length; i++)\n    {\n      if (\"qwertyuiopasdfghjklzxcvbnm\".indexOf(w[i]) == -1)\n      {\n        w = w.replace(w[i], \"\");\n        i--;\n      }\n    }\n    \n    var request = await fetch(\"https://api.dictionaryapi.dev/api/v2/entries/en_US/\" + w);\n    \n    var jsonContent = await request.json();\n    \n    if (jsonContent.title == \"No Definitions Found\")\n    {\n      this.setState({loadState: NOTFOUND});\n      return;\n    }\n    \n    \n    var word = jsonContent[0].word;\n    var type = jsonContent[0].meanings[0].partOfSpeech;\n    var definition = jsonContent[0].meanings[0].definitions[0].definition;\n    var pronunciation = jsonContent[0].phonetics[0].text;\n    var soundUrl = jsonContent[0].phonetics[0].audio;\n\n    \n    this.setState({\n      wordInfo: {\n        word: word,\n        type: type,\n        definition: definition,\n        pronunciation: pronunciation,\n        soundUrl: soundUrl\n      },\n      loadState: FOUND\n    });\n    \n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#fff',\n    alignItems: 'center',\n  },\n  header: {\n    width: \"100%\",\n    height: 100,\n    alignContent: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginBottom: 50,\n    backgroundColor: \"gray\"\n  },\n  headerTxt: {\n    textAlign: 'center',\n    fontSize: 30,\n    color: \"white\"\n  },\n  inputAndBtnContainer: {\n    alignItems: 'center',\n    width: 500,\n    maxWidth: \"80%\",\n    marginBottom: 20\n  },\n  wordInput: {\n    borderWidth: 2,\n    borderColor: \"gray\",\n    width: \"100%\",\n    textAlign: 'center',\n    height: 40,\n    marginBottom: 10,\n    borderRadius: 5\n  },\n  defineBtn: {\n    borderWidth: 2,\n    borderColor: \"black\",\n    width: \"20%\",\n    alignItems: 'center',\n    height: 30,\n    justifyContent: 'center',\n    borderRadius: 5\n  },\n  wordDefinitionContainer: {\n    width: 500,\n    maxWidth: \"90%\",\n    borderWidth: 4,\n    borderRadius: 10,\n    borderColor: \"gray\",\n    padding: 10\n  },\n  wordDefSection: {\n    width: \"100%\",\n    justifyContent: 'space-between',\n    marginVertical: 15\n  },\n  wordDefTxtTitle: {\n    color: \"#ff8300\",\n    fontWeight: 'bold',\n    fontSize: 20,\n  },\n  wordDefTxtContent: {\n    color: \"gray\",\n    fontWeight: 'bold',\n    fontSize: 20,\n  },\n  pronounceBtn: {\n    backgroundColor: \"#ff8300\",\n    width: 120,\n    height: 100,\n    maxWidth: \"70%\",\n    borderRadius: 10,\n    marginTop: 5,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  pronounceBtnTxt: {\n    color: \"white\",\n    fontWeight: 'bold',\n    fontSize: 24,\n    textAlign: 'center'\n  }\n});\n"],"sourceRoot":""}